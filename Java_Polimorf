// Imports of the needed class

import java.util.Scanner;
import java.util.Locale;
import java.util.List;
import java.util.ArrayList;

//Execute the main program
public class Main {
    public static void main(String[] args) {

        //Instance of  Scanner for the user inputs
        Scanner sc = new Scanner(System.in);
        Locale.setDefault(Locale.US);

        //Instance of a new ArrayList
        List<Employee> list = new ArrayList<>();


         
        System.out.print("Enter the number of employees:");
 
        int n = sc.nextInt();          // Capture the user input

       /* A For Loop will run n times 
         as the user wants in the input, and each time it will 
         instance a new Employee and after it will add the new Employee in the list created before */

        for (int i = 1; i <= n; i++) {
            System.out.println("Employee #" + i + " data:");
            System.out.print("Outsourced (y/n)? ");
            char ch = sc.next().charAt(0);
            System.out.print("Name: ");
            sc.nextLine();
            String name = sc.nextLine();
            System.out.print("Hours: ");
            int hours = sc.nextInt();
            System.out.print("Value per hour: ");
            double valuePerHour = sc.nextDouble();

         /* theres a conditional: if the employee is outsourced he will be an 
         instance and add in list but he it is  using polimorfism of the method overrided */

            if (ch == 'y') {
                System.out.print("Additional charge: ");
                double additionalCharge = sc.nextDouble();
                list.add(new OutsourcedEmployee(name, hours, valuePerHour, additionalCharge));
            } else {
                list.add(new Employee(name, hours, valuePerHour));
            }
        }

        // in the end it will show the full data

        System.out.println();
        System.out.println("PAYMENTS:");

       // another For Each will run in the Employee list created and show all the instances and parameters
        for (Employee emp : list) {
            System.out.println(emp.getName() + " - $ " + String.format("%.2f", emp.payment()));
        }

        sc.close();
    }
}

class Employee {
    private String name;
    private Integer hours;
    private Double valuePerHour;

    public Employee() {}

    public Employee(String name, Integer hours, Double valuePerHour) {
        this.name = name;
        this.hours = hours;
        this.valuePerHour = valuePerHour;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getHours() {
        return hours;
    }

    public void setHours(Integer hours) {
        this.hours = hours;
    }

    public Double getValuePerHour() {
        return valuePerHour;
    }

    public void setValuePerHour(Double valuePerHour) {
        this.valuePerHour = valuePerHour;
    }

    public double payment() {
        return hours * valuePerHour;
    }
}

class OutsourcedEmployee extends Employee {
    private Double additionalCharge;

    public OutsourcedEmployee() {
        super();
    }

    public OutsourcedEmployee(String name, Integer hours, Double valuePerHour, Double additionalCharge) {
        super(name, hours, valuePerHour);
        this.additionalCharge = additionalCharge;
    }

    public Double getAdditionalCharge() {
        return additionalCharge;
    }

    public void setAdditionalCharge(Double additionalCharge) {
        this.additionalCharge = additionalCharge;
    }

    @Override
    public double payment() {
        return super.payment() + additionalCharge * 1.1;
    }
}
